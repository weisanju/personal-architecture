---
# 客户端管理任务

# 添加/更新客户端
- name: Check if client private key exists
  stat:
    path: "{{ wireguard_config_path }}/privatekey"
  register: client_key_file
  become: true
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent'

- name: Generate client private key
  shell: wg genkey
  register: client_private_key
  args:
    creates: "{{ wireguard_config_path }}/privatekey"
  become: true
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent' and not client_key_file.stat.exists

- name: Read existing client private key
  slurp:
    src: "{{ wireguard_config_path }}/privatekey"
  register: existing_client_private_key
  become: true
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent' and client_key_file.stat.exists

- name: Set client private key fact
  set_fact:
    client_private_key:
      stdout: "{{ existing_client_private_key.content | b64decode | trim if client_key_file.stat.exists else client_private_key.stdout }}"
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent'

- name: Save client private key
  copy:
    content: "{{ client_private_key.stdout }}"
    dest: "{{ wireguard_config_path }}/privatekey"
    mode: 0600
  become: true
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent'

- name: Generate client public key
  shell: echo "{{ client_private_key.stdout }}" | wg pubkey
  register: client_public_key
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent'

- name: Save client public key
  copy:
    content: "{{ client_public_key.stdout }}"
    dest: "{{ wireguard_config_path }}/publickey"
    mode: 0644
  become: true
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent'

# 收集所有客户端公钥（包括状态为active的客户端）
- name: Collect client public keys
  set_fact:
    client_pubkeys: "{{ client_pubkeys|default({}) | combine({inventory_hostname: client_public_key.stdout}) }}"
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state == 'active'

# 下线客户端
- name: Remove client configuration
  file:
    path: "{{ wireguard_config_path }}/{{ wireguard_interface }}.conf"
    state: absent
  become: true
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state == 'absent'
  notify: restart wireguard

# 配置客户端
- name: Configure WireGuard clients
  template:
    src: wg-client.conf.j2
    dest: "{{ wireguard_config_path }}/{{ wireguard_interface }}.conf"
    mode: 0600
  become: true
  when: inventory_hostname in groups['wireguard_clients'] and wireguard_client_state != 'absent'
  notify: restart wireguard