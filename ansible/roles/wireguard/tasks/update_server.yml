---
# 服务端更新任务

# 检查服务端密钥
- name: Check if server private key exists
  stat:
    path: "{{ wireguard_config_path }}/privatekey"
  register: server_key_file
  become: true
  when: inventory_hostname in groups['wireguard_server']

- name: Generate server private key if not exists
  shell: wg genkey
  register: server_private_key
  args:
    creates: "{{ wireguard_config_path }}/privatekey"
  become: true
  when: inventory_hostname in groups['wireguard_server'] and not server_key_file.stat.exists

- name: Read existing server private key
  slurp:
    src: "{{ wireguard_config_path }}/privatekey"
  register: existing_server_private_key
  become: true
  when: inventory_hostname in groups['wireguard_server'] and server_key_file.stat.exists

- name: Set server private key fact
  set_fact:
    server_private_key:
      stdout: "{{ existing_server_private_key.content | b64decode | trim if server_key_file.stat.exists else server_private_key.stdout }}"
  when: inventory_hostname in groups['wireguard_server']

- name: Generate server public key
  shell: echo "{{ server_private_key.stdout }}" | wg pubkey
  register: server_public_key
  when: inventory_hostname in groups['wireguard_server']

# 收集客户端公钥
- name: Share client public keys with server
  set_fact:
    client_pubkeys: "{{ hostvars | json_query('*.client_pubkeys') | select('defined') | list | combine }}"
  run_once: true
  delegate_to: "{{ groups['wireguard_server'][0] }}"
  when: inventory_hostname in groups['wireguard_server']

# 更新服务端配置
- name: Configure WireGuard server
  template:
    src: wg-server.conf.j2
    dest: "{{ wireguard_config_path }}/{{ wireguard_interface }}.conf"
    mode: 0600
  become: true
  when: inventory_hostname in groups['wireguard_server']
  notify: restart wireguard

# 确保 IP 转发已启用
- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present
    sysctl_set: yes
    reload: yes
  become: true
  when: inventory_hostname in groups['wireguard_server'] 